<template>
  <q-page padding>
    <h4 class="text-center">Your Profile</h4>
    <div class="flex flex-center absolute-full text-subtitle2">
      <q-card class="my-card q-px-md p-py-md" style="background-color: rgba(255, 255, 255, 0.7);">
        <div v-if="loading" class="text-center">Loading...</div>
        <div v-else>
          <p>Name: {{ profile.name }}</p>
          <p>Lastname: {{ profile.lastname }}</p>
          <p>Username: {{ profile.username }}</p>
          <p>Role Name: {{ profile.role_name }}</p>
          <!-- Add other profile data you want to display -->
        </div>
      </q-card>
    </div>
  </q-page>
</template>
<script>
import { defineComponent } from "vue";
import axios from "axios";
import { useQuasar } from 'quasar'
import { Notify } from 'quasar';

export default defineComponent({
  name:"ProfilePage",

  data(){
    return{
      userId:null,
      profile:null, // Change to null initially
      loading:true,
      imageUrl:null,
    }
  },
  methods:{
    // getImageUrl(){

    // },
    async fetchData(){
      const token = localStorage.getItem("accessToken");
      const userId = localStorage.getItem("userId");
      try{
        const response = await axios.get(
          `http://localhost:3000/api/auth/profile/${userId}`,
          {
            headers:{
              "x-access-token":token,
            }
          }
        );
        this.profile = response.data;
        this.loading = false; // Set loading to false when data is received
        if(this.profile && this.profile.img === null){

        }else{
          this.getImageUrl(this.profile.img);
        }
      }catch(error){
        console.log(error);
        this.loading = false;
        // Handle error here, show notification etc.
        // Notify.create({
        //   type: 'negative',
        //   message: 'Failed to fetch profile data.'
        // })
      }
    },
    async getImageUrl(imgName){
      try{
        const response = await axios.get(
          `http://localhost:3000/api/file/${imgName}`,
        )
        this.imageUrl = response.data.url;
      }catch(error){
        console.error('Failed to fetch image URL:', error);
      }
    }
  },
  
  mounted(){
    this.userId = localStorage.getItem("userId");
    this.fetchData();
  }
});
</script>
